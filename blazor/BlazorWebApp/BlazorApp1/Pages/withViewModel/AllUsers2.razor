@page "/users2"
@using BlazorApp1.Models
@using BlazorApp1.ViewModel

@inject AllUsersViewModel ViewModel

<PageTitle>Utilisateurs</PageTitle>

<h1>Utilisateurs</h1>

@if (ViewModel.LoadUsersCommand.IsRunning)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <Grid TItem="Utilisateur"
          DataProvider="GetAllUsersData"
          AllowFiltering="true"
          AllowPaging="true"
          Responsive="true"
          Class="table table-hover table-bordered table-striped"
          >
        <GridColumns >
            <GridColumn TItem="Utilisateur" HeaderText="Nom" PropertyName="Nom">
                @context.Nom
            </GridColumn>
            <GridColumn TItem="Utilisateur" HeaderText="Prénom" PropertyName="Prenom">
                @context.Prenom
            </GridColumn>
            <GridColumn TItem="Utilisateur" HeaderText="Mail" PropertyName="Mail">
                @context.Mail
            </GridColumn>
            <GridColumn TItem="Utilisateur" HeaderText="Mobile" PropertyName="Mobile">
                @context.Mobile
            </GridColumn>
            <GridColumn TItem="Utilisateur" HeaderText="Ville" PropertyName="Ville">
                @context.Ville
            </GridColumn>
            <GridColumn TItem="Utilisateur" HeaderText="Pays" PropertyName="Pays">
                @context.Pays
            </GridColumn>
            <GridColumn TItem="Utilisateur" HeaderText="Actions">
                <button class="btn btn-primary" @onclick="() => NavigateToEditUser(new GridRowEventArgs<Utilisateur>(context))">
                    Edit
                </button>
            </GridColumn>
        </GridColumns>
    </Grid>
}

@code {
    [Inject] private NavigationManager Navigation { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadUsersCommand.ExecuteAsync(null);
    }

    private async Task<GridDataProviderResult<Utilisateur>> GetAllUsersData(GridDataProviderRequest<Utilisateur> request)
    {
        if (ViewModel.Utilisateurs is null)
        {
            await ViewModel.LoadUsersCommand.ExecuteAsync(null);
            ViewModel.Utilisateurs = ViewModel.Utilisateurs;
        }

        return await Task.FromResult(request.ApplyTo(ViewModel.Utilisateurs));
    }

    private void NavigateToEditUser(GridRowEventArgs<Utilisateur> args)
    {
        Console.WriteLine($"Navigating to edit user {args.Item.UtilisateurId}");
        Navigation.NavigateTo($"/editUser2/{args.Item.UtilisateurId}");
    }

}